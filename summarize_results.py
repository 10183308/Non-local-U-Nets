import numpy as np

# overlap step = 8
# subject 1-10

# sub1: 180000
# sub2: 108000
# sub3: 171000
# sub4: 171000
# sub5: 171000
# sub6: 171000
# sub7: 153000
# sub8: 171000
# sub9: 135000
# subx: 153000

Dice_ratio_CSF = [
				0.9589092576307621,
				0.950097979928159,
				0.9542547681776217,
				0.9650256753458812,
				0.9435801088819165,
				0.9445038940287671,
				0.9450572223113536,
				0.9625070402039436,
				0.9486368252480275,
				0.9572319201995012
				 ]

Dice_ratio_GM = [
				0.9303290032106876,
				0.9232496177977336,
				0.9272057890730717,
				0.9189791265264198,
				0.9182675444109644,
				0.9248479823106689,
				0.9207075319651875,
				0.9335978354014426,
				0.9200698019063988,
				0.9278021664025768
				]

Dice_ratio_WM = [
				0.9191816885824191,
				0.8997980172170477,
				0.9182519138840554,
				0.9058280618586791,
				0.9075093194173294,
				0.919684918413327,
				0.9109074976005532,
				0.9187809885552368,
				0.9157122423222549,
				0.8867377458363817
				]

Dice_ratio_AVG = [
				0.9361399831412895,
				0.9243818716476468,
				0.9332374903782495,
				0.9299442879103267,
				0.9231189909034034,
				0.9296789315842543,
				0.9255574172923647,
				0.938295288053541,
				0.9281396231588936,
				0.9239239441461532
				 ]

MHD_CSF = [
		0.2682060077394686,
		0.2334179729331781,
		0.25847649812070445,
		0.23999991590069392,
		0.3053950097365736,
		0.2720594087288805,
		0.24807854061338894,
		0.23693340577979774,
		0.24350721050008517,
		0.2476980488567405
		  ]

MHD_GM = [
		0.6487806151016337,
		0.5891008719745043,
		0.5883661574285689,
		0.5291115343619104,
		0.6640065280285031,
		0.5658747678790776,
		0.5927434372696735,
		0.5533423968160541,
		0.6498189672390075,
		0.56918270022596
		 ]

MHD_WM = [
		0.5021078606900412,
		0.4465759949726145,
		0.4446565306614329,
		0.3913848426030941,
		0.4892052746162865,
		0.40598975121471587,
		0.45273580791375584,
		0.4097620912156817,
		0.5050192369204786,
		0.40620563386818115
		 ]

MHD_AVG = [
		0.4730314945103811,
		0.42303161329343236,
		0.4304997287369021,
		0.38683209762189946,
		0.4862022707937877,
		0.4146413092742247,
		0.43118592859893945,
		0.4000126312705112,
		0.466115138219857,
		0.4076954609836272
		  ]

assert len(Dice_ratio_CSF) == 10
assert len(Dice_ratio_GM) == 10
assert len(Dice_ratio_WM) == 10
assert len(Dice_ratio_AVG) == 10
assert len(MHD_CSF) == 10
assert len(MHD_GM) == 10
assert len(MHD_WM) == 10
assert len(MHD_AVG) == 10

Dice_ratio_CSF = np.array(Dice_ratio_CSF)
Dice_ratio_GM = np.array(Dice_ratio_GM)
Dice_ratio_WM = np.array(Dice_ratio_WM)
Dice_ratio_AVG = np.array(Dice_ratio_AVG)
MHD_CSF = np.array(MHD_CSF)
MHD_GM = np.array(MHD_GM)
MHD_WM = np.array(MHD_WM)
MHD_AVG = np.array(MHD_AVG)

print('Dice_ratio_CSF mean: %.4f std: %.4f' % (np.mean(Dice_ratio_CSF), np.std(Dice_ratio_CSF)))
print('Dice_ratio_GM mean: %.4f std: %.4f' % (np.mean(Dice_ratio_GM), np.std(Dice_ratio_GM)))
print('Dice_ratio_WM mean: %.4f std: %.4f' % (np.mean(Dice_ratio_WM), np.std(Dice_ratio_WM)))
print('Dice_ratio_AVG mean: %.4f std: %.4f' % (np.mean(Dice_ratio_AVG), np.std(Dice_ratio_AVG)))

print('MHD_CSF mean: %.4f std: %.4f' % (np.mean(MHD_CSF), np.std(MHD_CSF)))
print('MHD_GM mean: %.4f std: %.4f' % (np.mean(MHD_GM), np.std(MHD_GM)))
print('MHD_WM mean: %.4f std: %.4f' % (np.mean(MHD_WM), np.std(MHD_WM)))
print('MHD_AVG mean: %.4f std: %.4f' % (np.mean(MHD_AVG), np.std(MHD_AVG)))